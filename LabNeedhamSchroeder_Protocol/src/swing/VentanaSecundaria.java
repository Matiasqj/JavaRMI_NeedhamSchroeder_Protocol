/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import clientermi.ConexionRmi;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import util.DES;

/**
 *
 * @author Matias Quinteros
 */
public class VentanaSecundaria extends javax.swing.JDialog {

    /**
     * Creates new form VentanaSecundaria
     */
    VentanaPrincipal inicio;
    int id_usuario;
    String nombre_usuario;
    public ConexionRmi conexion;
    int mi_nonce;
    private static VentanaSecundaria secundaria;

    public VentanaSecundaria(java.awt.Frame parent, boolean modal, VentanaPrincipal inicio_sesion, int id, String nombre, ConexionRmi rmi, int nonce) {
        super(parent, modal);
        this.conexion = rmi;
        id_usuario = id;
        nombre_usuario = nombre;
        inicio = inicio_sesion;
        mi_nonce = nonce;

        initComponents();
        jLabel1.setText("Bienvenido " + nombre);
        CargarListaOnline(nombre);
        comenzar.setEnabled(false);
        paso2.setEnabled(false);
        paso3.setEnabled(false);
        paso4.setEnabled(false);
        secundaria = this;

        this.setLocationRelativeTo(null);
        this.setVisible(modal);
    }
    DefaultListModel modelo_lista;

    public VentanaSecundaria getVentanaSecundaria() {
        return secundaria;
    }

    public void CargarListaOnline(String minombre) {
        modelo_lista = new DefaultListModel();
        try {
            ArrayList<String[]> lista = conexion.getOnlineUsers();
            for (int i = 0; i < lista.size(); i++) {
                String auxiliar[] = lista.get(i);
                //System.out.println(""+auxiliar[1]);
                if (!auxiliar[1].equals(minombre)) {
                    modelo_lista.addElement(auxiliar[1]);
                }
            }
            if (modelo_lista.getSize() == 0) {
                modelo_lista.addElement("No hay usuarios online");
            }
            jList1.setModel(modelo_lista);
        } catch (RemoteException ex) {
            System.out.println("error al cargar la lista");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        establecercomunicacion = new javax.swing.JButton();
        comenzar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Logmensajes = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        CerrarSesion = new javax.swing.JButton();
        infotext = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        paso2 = new javax.swing.JButton();
        paso3 = new javax.swing.JButton();
        paso4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Bienvenido: ");

        jScrollPane1.setViewportView(jList1);

        jLabel2.setText("Usuarios Online:");

        establecercomunicacion.setText("Establecer Comunicación");
        establecercomunicacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                establecercomunicacionMouseClicked(evt);
            }
        });

        comenzar.setText("Comenzar Chat");
        comenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comenzarActionPerformed(evt);
            }
        });

        Logmensajes.setEditable(false);
        Logmensajes.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        Logmensajes.setColumns(20);
        Logmensajes.setRows(5);
        jScrollPane2.setViewportView(Logmensajes);

        jLabel3.setText("Mensaje del servidor:");

        CerrarSesion.setText("Cerrar Sesion");
        CerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarSesionActionPerformed(evt);
            }
        });

        infotext.setText("Para establecer comunicación con un usuario seleccione uno de la lista y presione Comenzar");

        refresh.setText("Refrescar Lista");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        paso2.setText("Ver_Paso2");
        paso2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paso2ActionPerformed(evt);
            }
        });

        paso3.setText("Iniciar paso 3");
        paso3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paso3ActionPerformed(evt);
            }
        });

        paso4.setText("Recibido paso 4  Responder");
        paso4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paso4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(refresh)
                            .addComponent(establecercomunicacion))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addContainerGap(281, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(infotext, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CerrarSesion)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comenzar)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(paso2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(paso3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(paso4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CerrarSesion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(refresh)
                        .addGap(18, 18, 18)
                        .addComponent(establecercomunicacion))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infotext, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paso2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paso3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paso4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(comenzar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comenzarActionPerformed
        try {
            conexion.enviarmensajeusuario();
        } catch (RemoteException ex) {
            Logger.getLogger(VentanaSecundaria.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_comenzarActionPerformed

    private void CerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarSesionActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_CerrarSesionActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        jList1.removeAll();
        CargarListaOnline(nombre_usuario);
    }//GEN-LAST:event_refreshActionPerformed
    public String ck = "";
    public String mensajepaso2 = "";
    public String usuario_destino ="";
    private void establecercomunicacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_establecercomunicacionMouseClicked
        String usuario = "";
        try {
            usuario = (String) jList1.getSelectedValue();
            usuario_destino=usuario;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un usuario de la lista");
        }
        if (usuario == null || usuario.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un usuario de la lista");
        } else {
            try {

                Logmensajes.append("Intentado comunicación con el servidor" + "\n");
                Logmensajes.append("Nonce generado : " + mi_nonce + "\n");
                Logmensajes.append("Enviando al servidor, usuario: " + nombre_usuario + ", usuario destino: " + usuario + ", nonce: " + mi_nonce + "\n");

                String stringpaso2 = conexion.getPaso2Results(nombre_usuario, usuario, String.valueOf(mi_nonce));
                DES des = new DES();
                String pa2 = des.desencriptado("1", stringpaso2);
                if (pa2 == null) {
                    Logmensajes.append("Ocurrió un error en la comunicación\n");
                } else {
                    Logmensajes.append("Recibido del servidor :" + pa2.replace("#servidor#", " , ") + "\n");
                    Logmensajes.append("Desencriptando con clave... \n");
                    Scanner s = new Scanner(pa2).useDelimiter("#servidor#");
                    Logmensajes.append("( ");
                    int k = 0;

                    while (s.hasNext()) {

                        if (k == 2) {
                            ck = s.next();
                            Logmensajes.append(ck + " , ");
                        } else if (k == 3) {
                            mensajepaso2 = s.next();
                            Logmensajes.append(mensajepaso2 + " )");
                        } else {
                            Logmensajes.append(s.next() + " , ");
                        }
                        k++;

                    }

                    s.close();
                    System.out.println(""+des.desencriptado("1", mensajepaso2));
                    Logmensajes.append("\n");
                    paso2.setEnabled(true);
                    paso3.setEnabled(true);
                }

            //System.out.println("desencriptado con kA: "+pa2);
                // System.out.println("desencriptado con kb"+des.desencriptado("1", pa2));
                //aqui envio al servidor
                //System.out.println(""+paso1_datos[0]+" "+paso1_datos[1]+" "+" "+paso1_datos[2]);
            } catch (RemoteException ex) {
                Logger.getLogger(VentanaSecundaria.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        //si se selecciono el usuario entonces envio mi nonce, usario y destino

    }//GEN-LAST:event_establecercomunicacionMouseClicked

    private void paso2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paso2ActionPerformed
        // TODO add your handling code here:
        System.out.println("sii");
    }//GEN-LAST:event_paso2ActionPerformed

    private void paso3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paso3ActionPerformed
        // TODO add your handling code here:
        Logmensajes.append("Enviando al usuario : "+usuario_destino+" CK y "+nombre_usuario+" encriptado con KB: "+mensajepaso2+"\n");
        System.out.println("sii");
        
        
        
    }//GEN-LAST:event_paso3ActionPerformed

    private void paso4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paso4ActionPerformed
        // TODO add your handling code here:
        System.out.println("sii");
    }//GEN-LAST:event_paso4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CerrarSesion;
    private javax.swing.JTextArea Logmensajes;
    private javax.swing.JButton comenzar;
    private javax.swing.JButton establecercomunicacion;
    private javax.swing.JLabel infotext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton paso2;
    private javax.swing.JButton paso3;
    private javax.swing.JButton paso4;
    private javax.swing.JButton refresh;
    // End of variables declaration//GEN-END:variables
}
